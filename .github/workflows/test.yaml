name: test

on:
  push:
    paths-ignore:
      - '*.md'
      - 'renovate.json'
  
env:
  PRISMA_TELEMETRY_INFORMATION: 'e2e-tests test.yaml'
  SLACK_WEBHOOK_URL_WORKFLOWS: ${{ secrets.SLACK_WEBHOOK_URL_WORKFLOWS }}
  
jobs:
 
  platforms-serverless:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        platform:
          - serverless-lambda
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      START_TIME: ${{ needs.start-time.outputs.start-time }}
      CI: 1
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_WEBHOOK_URL_FAILING: ${{ secrets.SLACK_WEBHOOK_URL_FAILING }}
      SSH_KEY_NETLIFY: ${{ secrets.SSH_KEY_NETLIFY }}
      SSH_KEY_NETLIFY_ZISI: ${{ secrets.SSH_KEY_NETLIFY_ZISI }}
      GCP_FUNCTIONS_PG_URL: ${{ secrets.GCP_FUNCTIONS_PG_URL }}
      GCP_FUNCTIONS_PROJECT: ${{ secrets.GCP_FUNCTIONS_PROJECT }}
      GCP_FUNCTIONS_ACCOUNT: ${{ secrets.GCP_FUNCTIONS_ACCOUNT }}
      GCP_FUNCTIONS_SECRET: ${{ secrets.GCP_FUNCTIONS_SECRET }}
      NETLIFY_PG_URL: ${{ secrets.NETLIFY_PG_URL }}
      NETLIFY_ZISI_PG_URL: ${{ secrets.NETLIFY_ZISI_PG_URL }}
      LAMBDA_PG_URL: ${{ secrets.LAMBDA_PG_URL }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NPM_CONFIG_LOGLEVEL: error
      NODE_ENV: development
      NODE_MODULES_CACHE: false
      NODE_VERBOSE: true
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE: ${{ secrets.AWS_ROLE }}
      VERCEL_NODE_BUILDER_PROJECT_ID: ${{ secrets.VERCEL_NODE_BUILDER_PROJECT_ID }}
      VERCEL_NODE_BUILDER_ORG_ID: ${{ secrets.VERCEL_NODE_BUILDER_ORG_ID }}
      VERCEL_WITH_REDWOOD_PROJECT_ID: ${{ secrets.VERCEL_WITH_REDWOOD_PROJECT_ID }}
      VERCEL_WITH_REDWOOD_ORG_ID: ${{ secrets.VERCEL_WITH_REDWOOD_ORG_ID }}
      VERCEL_WITH_NEXTJS_PROJECT_ID: ${{ secrets.VERCEL_WITH_NEXTJS_PROJECT_ID }}
      VERCEL_WITH_NEXTJS_ORG_ID: ${{ secrets.VERCEL_WITH_NEXTJS_ORG_ID }}
      VERCEL_API_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
      VERCEL_API_ORG_ID: ${{ secrets.VERCEL_API_ORG_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      NETLIFY_BETA_PG_URL: ${{ secrets.NETLIFY_BETA_PG_URL }}
      NETLIFY_BUILD_LIFECYCLE_TRIAL: ${{ secrets.NETLIFY_BUILD_LIFECYCLE_TRIAL }}
      AZURE_FUNCTIONS_LINUX_PG_URL: ${{ secrets.AZURE_FUNCTIONS_LINUX_PG_URL }}
      AZURE_FUNCTIONS_WINDOWS_PG_URL: ${{ secrets.AZURE_FUNCTIONS_WINDOWS_PG_URL }}
      AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
      AZURE_SP_PASSWORD: ${{ secrets.AZURE_SP_PASSWORD }}
      AZURE_SP_NAME: ${{ secrets.AZURE_SP_NAME }}
      FIREBASE_FUNCTIONS_PG_URL: ${{ secrets.FIREBASE_FUNCTIONS_PG_URL }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      SERVERLESS_LAMBDA_PG_URL: ${{ secrets.SERVERLESS_LAMBDA_PG_URL }}
    steps:
      - uses: actions/checkout@v2

      - name: use node 12
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install Dependencies
        run: yarn

      - name: test ${{ matrix.platform }}
        id: run-test
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: bash .github/scripts/test-project.sh platforms-serverless ${{ matrix.platform }}

      - name: notify-slack
        if: failure()
        run: bash .github/slack/notify-failure.sh platforms-serverless ${{ matrix.platform }}
